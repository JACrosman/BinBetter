// <auto-generated />
using BinBetter.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BinBetter.Api.Migrations
{
    [DbContext(typeof(BinBetterContext))]
    [Migration("20230911004555_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BinBetter.Api.Data.Domain.Bin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "My first Bin",
                            Name = "Bin 1"
                        });
                });

            modelBuilder.Entity("BinBetter.Api.Data.Domain.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BinId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<bool>("IsInBin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BinId");

                    b.ToTable("Goals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BinId = 1,
                            Description = "My first goal",
                            Frequency = 0,
                            IsInBin = false,
                            Name = "Goal 1",
                            Quantity = 0
                        },
                        new
                        {
                            Id = 2,
                            BinId = 1,
                            Description = "My second goal",
                            Frequency = 0,
                            IsInBin = false,
                            Name = "Goal 2",
                            Quantity = 0
                        },
                        new
                        {
                            Id = 3,
                            BinId = 1,
                            Description = "My third goal",
                            Frequency = 0,
                            IsInBin = false,
                            Name = "Goal 3",
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("BinBetter.Api.Data.Domain.Goal", b =>
                {
                    b.HasOne("BinBetter.Api.Data.Domain.Bin", "Bin")
                        .WithMany()
                        .HasForeignKey("BinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bin");
                });
#pragma warning restore 612, 618
        }
    }
}
